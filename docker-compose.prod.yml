version: '3'

services:
  service:
    build: ./app
    volumes:
      - static_volume:/opt/app/staticfiles
    expose:
      - "8000"
    depends_on:
      - db

  nginx:
    image: nginx:latest
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./configs:/etc/nginx/conf.d:ro
      - static_volume:/opt/app/staticfiles
    depends_on:
      - service
    ports:
      - "80:80"

  db:
    image: postgres:13
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    restart: always
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_DB=${POSTGRES_DB}

  etl:
    build: ./postgres_to_es
    command: sh wait_to_start.sh
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_PORT=${POSTGRES_PORT}
      - POSTGRES_DB=${POSTGRES_DB}
      - ES_HOST=${ES_HOST}
      - WAIT_COMMAND=[ $$(curl --write-out %{http_code} --silent --output /dev/null http://es:9200/_cat/health?h=st) = 200 ]
      - WAIT_START_CMD=python -u etl.py
      - WAIT_SLEEP=5
      - WAIT_LOOPS=10
    volumes:
      - ./postgres_to_es:/etl
    depends_on:
      - es
      - service
  es:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.12.1
    environment:
      - discovery.type=single-node
    volumes:
      - es_data:/usr/share/elasticsearch/data

volumes:
  postgres_data:
  static_volume:
  es_data:
